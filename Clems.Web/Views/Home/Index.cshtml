@{
    ViewData["Title"] = "Dashboard";
}

@section Wallets {
    @foreach (var wallet in Model)
    {
        <li class="cursor-pointer px-3 py-2.5 rounded-lg hover:bg-gray-100 transition wallet-item"
            data-wallet-id="@wallet.Id"
            role="button"
            tabindex="0">
            <div class="flex justify-between items-center">
                <span class="font-medium text-gray-900">@wallet.Name</span>
                <span class="text-sm text-gray-600">@wallet.Balance:C</span>
            </div>
        </li>
    }
}

<!-- Add Wallet Modal -->
<div id="wallet-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50">
    <div class="bg-white rounded-xl shadow-lg w-full max-w-md p-6">
        <h2 class="text-xl font-bold text-gray-900 mb-4">New Wallet</h2>
        <form id="wallet-form" class="space-y-4">
            <div>
                <label for="wallet-name" class="block text-sm font-medium text-gray-700 mb-1">Wallet Name</label>
                <input type="text" id="wallet-name" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 outline-none transition" required>
            </div>
            <div>
                <label for="wallet-initial-balance" class="block text-sm font-medium text-gray-700 mb-1">Initial Balance</label>
                <input type="number" id="wallet-initial-balance" step="0.01" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 outline-none transition">
            </div>
            <div class="flex justify-end gap-2 pt-2">
                <button type="button" id="close-wallet-modal"
                    class="px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition">
                    Cancel
                </button>
                <button type="submit"
                    class="px-4 py-2 bg-success-500 text-white rounded-lg hover:bg-success-600 focus:outline-none focus:ring-2 focus:ring-success-500 focus:ring-offset-2 transition">
                    Create
                </button>
            </div>
        </form>
    </div>
</div>

<div id="wallet-history-container" class="mt-6">
    <p class="text-gray-500 italic">Select a wallet to see its transaction history.</p>
</div>

<!-- Transaction Modal -->
<div id="transaction-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50">
    <div class="bg-white rounded-xl shadow-lg w-full max-w-md p-6">
        <h2 class="text-xl font-bold text-gray-900 mb-4">New Transaction</h2>
        <form id="transaction-form" class="space-y-4">
            <input type="hidden" name="walletId" id="walletId">
            <div>
                <label for="type" class="block text-sm font-medium text-gray-700 mb-1">Type</label>
                <select name="type" id="type" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 outline-none transition">
                    <option value="Deposit">Deposit</option>
                    <option value="Withdraw">Withdraw</option>
                </select>
            </div>
            <div>
                <label for="amount" class="block text-sm font-medium text-gray-700 mb-1">Amount</label>
                <input type="number" name="amount" id="amount" step="0.01" required
                    class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 outline-none transition">
            </div>
            <div>
                <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                <input type="text" name="description" id="description" required
                    class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 outline-none transition">
            </div>
            <div class="flex justify-end gap-2 pt-2">
                <button type="button" id="close-modal"
                    class="px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition">
                    Cancel
                </button>
                <button type="submit"
                    class="px-4 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition">
                    Save
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
<script>
    let selectedWalletId = null;

    function makeWalletClickable(li) {
        const handleClick = async () => {
            selectedWalletId = li.dataset.walletId;
            document.getElementById('walletId').value = selectedWalletId;

            try {
                const response = await axios.get(`/Home/WalletHistory?walletId=${selectedWalletId}`);
                document.getElementById('wallet-history-container').innerHTML = response.data;
            } catch (err) {
                document.getElementById('wallet-history-container').innerHTML = '<p class="text-red-500">Failed to load history.</p>';
            }
        };

        li.addEventListener('click', handleClick);
        li.addEventListener('keydown', e => {
            if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                handleClick();
            }
        });
    }

    // Initialize existing wallets
    document.querySelectorAll('.wallet-item').forEach(makeWalletClickable);

    // New Transaction Button
    document.getElementById('new-transaction-btn')?.addEventListener('click', () => {
        if (!selectedWalletId) {
            alert('Please select a wallet first.');
            return;
        }
        document.getElementById('transaction-modal').classList.remove('hidden');
    });

    // Close modals
    document.getElementById('close-modal')?.addEventListener('click', () => {
        document.getElementById('transaction-modal').classList.add('hidden');
    });

    document.getElementById('close-wallet-modal')?.addEventListener('click', () => {
        document.getElementById('wallet-modal').classList.add('hidden');
    });

    // Submit Transaction
    document.getElementById('transaction-form')?.addEventListener('submit', async e => {
        e.preventDefault();
        const formData = new FormData(e.target);
        try {
            const response = await axios.post('/Home/AddTransaction', formData);
            document.getElementById('wallet-history-container').innerHTML = response.data;
            document.getElementById('transaction-modal').classList.add('hidden');
            e.target.reset();
        } catch (err) {
            alert('Failed to save transaction.');
        }
    });

    // Open Add Wallet Modal
    document.getElementById('add-wallet-btn')?.addEventListener('click', () => {
        document.getElementById('wallet-modal').classList.remove('hidden');
    });

    // Submit New Wallet
    document.getElementById('wallet-form')?.addEventListener('submit', async e => {
        e.preventDefault();
        const name = document.getElementById('wallet-name').value.trim();
        const balance = parseFloat(document.getElementById('wallet-initial-balance').value) || 0;

        if (!name) return;

        try {
            const response = await axios.post('/Home/CreateWallet', { Name: name, InitialBalance: balance });
            const wallet = response.data;

            const li = document.createElement('li');
            li.className = 'cursor-pointer px-3 py-2.5 rounded-lg hover:bg-gray-100 transition wallet-item';
            li.dataset.walletId = wallet.id;
            li.setAttribute('role', 'button');
            li.setAttribute('tabindex', '0');
            li.innerHTML = `
                <div class="flex justify-between items-center">
                    <span class="font-medium text-gray-900">${wallet.name}</span>
                    <span class="text-sm text-gray-600">$${parseFloat(wallet.balance).toFixed(2)}</span>
                </div>
            `;

            document.getElementById('wallet-list').appendChild(li);
            makeWalletClickable(li);

            document.getElementById('wallet-modal').classList.add('hidden');
            e.target.reset();
        } catch (err) {
            alert('Failed to create wallet.');
        }
    });
</script>
}